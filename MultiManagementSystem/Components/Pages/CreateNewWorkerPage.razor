@page "/create"
@using MultiManagementSystem.People
@namespace MultiManagementSystem.Components.Pages

<div class="form-container">
    <h3 class="page-title">Create New Worker</h3>

    @if (showConfirmation)
    {
        <div class="alert alert-success" role="alert">
            <strong>Success!</strong> The worker has been created successfully.
            <strong>Your worker number is @NewWorkerNumber</strong>
        </div>

        <!-- Success Message Button -->
        <button class="btn btn-primary mt-3" @onclick="ResetForm">Create Another Worker</button>

        <!-- Navigate Home Button -->
        <button class="btn btn-primary mt-3" @onclick="NavigateHome">Navigate Home</button>
    }
    else if (showInvalidPassword)
    {
        <div class="password-error" style="color: red; text-align: center; margin-top: 1rem;">
            <p>Password is invalid. It must meet the following requirements:</p>
            <ul style="list-style-type: none; padding: 0;">
                <li>At least 6 characters long</li>
                <li>At least one uppercase letter (A-Z)</li>
                <li>At least one digit (0-9)</li>

                <button class="btn btn-primary mt-3" @onclick="NavigateHome">Navigate Home</button>
            </ul>
        </div>
    }
    else
    {
        <Microsoft.AspNetCore.Components.Forms.EditForm Model="@this" OnValidSubmit="CreateNewWorker">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form">
                <div class="form-group">
                    <label for="name">Name:</label>
                    <InputText id="name" @bind-Value="Name" class="form-control" required />
                </div>

                <div class="form-group">
                    <label for="password">Password:</label>
                    <InputText id="password" @bind-Value="Password" type="password" class="form-control" required />
                </div>

                <div class="form-group">
                    <label for="employeeType">Employee Type:</label>
                    <InputSelect id="employeeType" @bind-Value="IsManager" class="form-control">
                        <option value="false">Worker</option>
                        <option value="true">Manager</option>
                    </InputSelect>

                    <div class="form-group worker-country-group">
                        <label for="workerCountry">Country:</label>
                        <InputSelect id="workerCountry" @bind-Value="WorkerCountry" class="form-control">
                            @foreach (WorkerCountry country in Enum.GetValues(typeof(WorkerCountry)))
                            {
                                var countryName = country.ToString() ?? string.Empty;

                                // Format the name by adding spaces between words
                                var formattedCountry = string.Concat(countryName.Select((x, i) => i > 0 && char.IsUpper(x) ? " " + x : x.ToString())).Trim();

                                <option value="@countryName">@formattedCountry</option>
                            }
                        </InputSelect>
                    </div>

                </div>


                <button type="submit" class="btn btn-primary mt-4">Submit</button>
            </div>

        </Microsoft.AspNetCore.Components.Forms.EditForm>
    }
</div>
